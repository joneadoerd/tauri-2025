syntax = "proto3";
package packet;

message Packet {
  oneof kind {
    PacketHeader header = 1;
    PacketPayload payload = 2;
    PacketChecksum checksum = 3;
    PacketTimestamp timestamp = 4;
    PacketSource source = 5;
    PacketDestination destination = 6;
    PacketProtocol protocol = 7;
    PacketFlags flags = 8;
    PacketVersion version = 9;
    TargetPacket target_packet = 10;
    TargetPacketList target_packet_list = 11;
  }
}
message PacketHeader {
  uint32 id = 1;
  uint32 length = 2;
  uint32 checksum = 3;
  uint32 version = 4;
  uint32 flags = 5;
}
message PacketPayload {
  uint32 typeValue = 1;
  bytes data = 2;
  uint32 size = 3;
  string encoding = 4;
}
message PacketChecksum {
  uint32 algorithm = 1;
  bytes value = 2;
  uint32 length = 3;
}
message PacketTimestamp {
  uint32 seconds = 1;
  uint32 nanoseconds = 2;
}
message PacketSource {
  string ip = 1;
  uint32 port = 2;
  string mac = 3;
}
message PacketDestination {
  string ip = 1;
  uint32 port = 2;
  string mac = 3;
}
message PacketProtocol {
  string name = 1;
  uint32 version = 2;
  string description = 3;
}
message PacketFlags {
  bool is_fragmented = 1;
  bool is_encrypted = 2;
  bool is_compressed = 3;
  bool is_signed = 4;
}
message PacketVersion {
  uint32 major = 1;
  uint32 minor = 2;
  uint32 patch = 3;
  string build = 4;
}
message PacketError {
  uint32 code = 1;
  string message = 2;
  string details = 3;
}
message PacketStatus {
  uint32 code = 1;
  string message = 2;
  string details = 3;
}
message PacketResponse {
  uint32 code = 1;
  string message = 2;
  bytes data = 3;
  PacketError error = 4;
  PacketStatus status = 5;
}
message PacketRequest {
  uint32 id = 1;
  string method = 2;
  bytes params = 3;
  PacketError error = 4;
  PacketStatus status = 5;
}
message PacketAck {
  uint32 id = 1;
  string message = 2;
  bytes data = 3;
  PacketError error = 4;
  PacketStatus status = 5;
}
message PacketNack {
  uint32 id = 1;
  string message = 2;
  bytes data = 3;
  PacketError error = 4;
  PacketStatus status = 5;
}
message PacketPing {
  uint32 id = 1;
  string message = 2;
  bytes data = 3;
  PacketError error = 4;
  PacketStatus status = 5;
}
message SerialPacketEvent {
  string id = 1;
  Packet packet = 2;
}

message LLA {
  double lat = 1;
  double lon = 2;
  double alt = 3;
}

message NED {
  double north = 1;
  double east = 2;
  double down = 3;
}

message TargetPacket {
  uint32 target_id = 1;
  LLA lla = 2;
  NED ned = 3;
  NED ned_velocity = 4;
  double time = 5;
  LLA origin = 6;
}

message TargetPacketList {
  repeated TargetPacket packets = 1;
}